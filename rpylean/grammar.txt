file: export_format_version >items?< [EOF];

items: [SEPARATOR]* item ([SEPARATOR]+ item)*;

IGNORE: " ";
SEPARATOR: "\n";

NAT: "[0-9]*";
STRING: "[a-zA-Z]*";
HEXHEX: "[a-f][0-9]";

export_format_version: NAT "." NAT "." NAT;

item: name | universe | expr | recrule | declaration;

declaration:
      axiom
    | quotient
    | definition
    | theorem
    | inductive
    | constructor
    | recursor ;

nidx: NAT;
uidx: NAT;
eidx: NAT;
ridx: NAT;

name:
    nidx "#NS" nidx STRING
  | nidx "#NI" nidx NAT
  ;

universe:
    uidx "#US"  uidx
  | uidx "#UM"  uidx uidx
  | uidx "#UIM" uidx uidx
  | uidx "#UP"  nidx
  ;

expr:
    eidx "#EV"  NAT
  | eidx "#ES"  uidx
  | eidx "#EC"  nidx uidx*
  | eidx "#EA"  eidx eidx
  | eidx "#EL"  info nidx eidx eidx
  | eidx "#EP"  info nidx eidx eidx
  | eidx "#EZ"  info nidx eidx eidx eidx
  | eidx "#EJ"  nidx NAT eidx
  | eidx "#ELN" NAT
  | eidx "#ELS" (HEXHEX)*
  ;

info: "#BD" | "#BI" | "#BS" | "#BC";

hint: "O" | "A" | "R" NAT;

recrule: ridx "#RR" nidx NAT eidx;

axiom: "#AX" nidx eidx uidx*;

definition: "#DEF" nidx eidx eidx hint uidx*;

theorem: "#THM" nidx eidx eidx uidx*;

quotient: "#QUOT" nidx eidx uidx*;

inductive:
  "#IND"
  nidx
  eidx
  NAT
  NAT
  NAT
  NAT
  NAT
  nidx NAT*
  NAT
  nidx NAT*
  uidx*
  ;

constructor:
  "#CTOR"
  nidx
  eidx
  nidx
  NAT
  NAT
  NAT
  uidx*
  ;

recursor:
  "#REC"
  nidx
  eidx
  NAT
  nidx NAT*
  NAT
  NAT
  NAT
  NAT
  NAT
  ridx NAT*
  NAT
  uidx*
  ;
